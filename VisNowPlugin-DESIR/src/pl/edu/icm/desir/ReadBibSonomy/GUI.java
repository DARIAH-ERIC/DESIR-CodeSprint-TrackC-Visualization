/* ***** BEGIN LICENSE BLOCK *****
 *  
 * VisNowPlugin-DESIR
 * Copyright (C) 2018 onward University of Warsaw, ICM
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * ***** END LICENSE BLOCK ***** */

package pl.edu.icm.desir.ReadBibSonomy;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import pl.edu.icm.visnow.engine.core.ParameterProxy;
import pl.edu.icm.visnow.engine.core.Parameters;
import static pl.edu.icm.desir.ReadBibSonomy.ReadBibSonomyShared.*;
import pl.edu.icm.visnow.system.main.VisNow;
import pl.edu.icm.visnow.system.swing.FixedGridBagLayoutPanel;
import pl.edu.icm.visnow.system.swing.UIStyle;

/**
 * @author Piotr Wendykier (piotrw@icm.edu.pl) Warsaw University,
 * Interdisciplinary Centre for Mathematical and Computational Modelling
 */
public class GUI extends FixedGridBagLayoutPanel
{

    private static final long serialVersionUID = 2091329603867671946L;

    private final JFileChooser fileChooser;

    private Parameters parameters;
    private String lastPath = null;

    private final FileNameExtensionFilter jsonFilesFilter = new FileNameExtensionFilter("JSON files (*.json)", "json", "JSON");

    /**
     * Creates new form GUI
     */
    public GUI()
    {
        initComponents();

        fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(jsonFilesFilter);

        fileChooser.setLocation(0, 0);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(jsonFilesFilter);
        fileChooser.setMultiSelectionEnabled(false);

        filePanel.setVisible(true);
        restPanel.setVisible(false);
    }

    void setParameters(Parameters parameters)
    {
        this.parameters = parameters;
    }

    protected void updateGUI(final ParameterProxy p)
    {
        filenameTF.setText(p.get(FILENAME));
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        filePanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        filenameTF = new pl.edu.icm.visnow.gui.swingwrappers.TextField();
        browseButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        radioPanel = new javax.swing.JPanel();
        rbFile = new javax.swing.JRadioButton();
        rbREST = new javax.swing.JRadioButton();
        restPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfLogin = new javax.swing.JTextField();
        tfAPIKey = new javax.swing.JTextField();
        tfUserName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfTags = new javax.swing.JTextField();
        bRun = new javax.swing.JButton();

        filePanel.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("File:");
        filePanel.add(jLabel7, new java.awt.GridBagConstraints());

        filenameTF.setToolTipText("Browse image files");
        filenameTF.addUserActionListener(new pl.edu.icm.visnow.gui.swingwrappers.UserActionListener()
        {
            public void userChangeAction(pl.edu.icm.visnow.gui.swingwrappers.UserEvent evt)
            {
                filenameTFUserChangeAction(evt);
            }
            public void userAction(pl.edu.icm.visnow.gui.swingwrappers.UserEvent evt)
            {
            }
        });
        filenameTF.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                filenameTFFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        filePanel.add(filenameTF, gridBagConstraints);

        browseButton.setText("...");
        browseButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                browseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        filePanel.add(browseButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 0, 4);
        add(filePanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weighty = 1.0;
        add(filler1, gridBagConstraints);

        buttonGroup1.add(rbFile);
        rbFile.setSelected(true);
        rbFile.setText("File");
        rbFile.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        rbFile.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbFileActionPerformed(evt);
            }
        });
        radioPanel.add(rbFile);

        buttonGroup1.add(rbREST);
        rbREST.setText("REST");
        rbREST.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rbREST.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbRESTActionPerformed(evt);
            }
        });
        radioPanel.add(rbREST);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(radioPanel, gridBagConstraints);

        restPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Login: ");
        jLabel1.setFocusable(false);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        restPanel.add(jLabel1, gridBagConstraints);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("API key: ");
        jLabel2.setFocusable(false);
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        restPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("User name: ");
        jLabel3.setFocusable(false);
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        restPanel.add(jLabel3, gridBagConstraints);

        tfLogin.setText("piotrw");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        restPanel.add(tfLogin, gridBagConstraints);

        tfAPIKey.setText("1ab9b62e11db9db5bf231fd4784a7513");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        restPanel.add(tfAPIKey, gridBagConstraints);

        tfUserName.setText("jaeschke");
        tfUserName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tfUserNameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        restPanel.add(tfUserName, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Tags: ");
        jLabel4.setFocusable(false);
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        restPanel.add(jLabel4, gridBagConstraints);

        tfTags.setText("recommender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        restPanel.add(tfTags, gridBagConstraints);

        bRun.setText("Run");
        bRun.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bRunActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        restPanel.add(bRun, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 0, 4);
        add(restPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    protected void activateOpenDialog()
    {
        browseButtonActionPerformed(null);
    }

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_browseButtonActionPerformed
    {//GEN-HEADEREND:event_browseButtonActionPerformed

        fileChooser.setCurrentDirectory(lastPath != null ? new File(lastPath) : new File(VisNow.get().getMainConfig().getUsableDataPath(ReadBibSonomy.class)));

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            lastPath = file.getParent();
            VisNow.get().getMainConfig().setLastDataPath(lastPath, ReadBibSonomy.class);
            String absolutePath = file.getAbsolutePath();
            filenameTF.setText(absolutePath);
            parameters.set(FILENAME, absolutePath);
        }
    }//GEN-LAST:event_browseButtonActionPerformed


    private void filenameTFFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_filenameTFFocusGained
    {//GEN-HEADEREND:event_filenameTFFocusGained
        filenameTF.selectAll();
    }//GEN-LAST:event_filenameTFFocusGained

    private void filenameTFUserChangeAction(java.util.EventObject evt)//GEN-FIRST:event_filenameTFUserChangeAction
    {//GEN-HEADEREND:event_filenameTFUserChangeAction
        String filename = filenameTF.getText();
        parameters.set(FILENAME, filename, RESTRUN, false);
    }//GEN-LAST:event_filenameTFUserChangeAction

    private void rbFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rbFileActionPerformed
    {//GEN-HEADEREND:event_rbFileActionPerformed
        if (rbFile.isSelected()) {
            filePanel.setVisible(true);
            restPanel.setVisible(false);
        } else {
            filePanel.setVisible(false);
            restPanel.setVisible(true);
        }
    }//GEN-LAST:event_rbFileActionPerformed

    private void tfUserNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfUserNameActionPerformed
    {//GEN-HEADEREND:event_tfUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUserNameActionPerformed

    private void rbRESTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rbRESTActionPerformed
    {//GEN-HEADEREND:event_rbRESTActionPerformed
        if (rbREST.isSelected()) {
            filePanel.setVisible(false);
            restPanel.setVisible(true);
        } else {
            filePanel.setVisible(true);
            restPanel.setVisible(false);
        }
    }//GEN-LAST:event_rbRESTActionPerformed

    private void bRunActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bRunActionPerformed
    {//GEN-HEADEREND:event_bRunActionPerformed
        parameters.set(LOGIN, tfLogin.getText(), APIKEY, tfAPIKey.getText(), USERNAME, tfUserName.getText(), TAGS, tfTags.getText().trim().split("[,;\\s+]"), RESTRUN, true);
    }//GEN-LAST:event_bRunActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bRun;
    private javax.swing.JButton browseButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel filePanel;
    private pl.edu.icm.visnow.gui.swingwrappers.TextField filenameTF;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel radioPanel;
    private javax.swing.JRadioButton rbFile;
    private javax.swing.JRadioButton rbREST;
    private javax.swing.JPanel restPanel;
    private javax.swing.JTextField tfAPIKey;
    private javax.swing.JTextField tfLogin;
    private javax.swing.JTextField tfTags;
    private javax.swing.JTextField tfUserName;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] a)
    {
        VisNow.initLogging(true);
        VisNow.mockVisNow();
        UIStyle.initStyle();
        System.out.println(VisNow.get().getMainConfig());

        final JFrame f = new JFrame();
        f.add(new GUI());
        f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        f.setLocation(600, 300);
        f.pack();
        f.setVisible(true);

    }
}
